1995 JS was created by a guy from Netscape (in a week lol)

European Computer Manufacturers Association
ECMAScript 1 - 1997
ECMAScript 2 - 1998
ECMAScript 3 - 1999
ECMAScript 4 - n/a
ECMAScript 5 - 2009
ECMAScript 6 - 2015

EMCAScript Website
ecma-international.org

ECMAScript repo:
github.com/tc39

Table that shows you browser compatibility with ES6+
https://kangax.github.io/compat-table/es6/

+ originally, you were stuck with "var", but now there's "let"
+ "const" is used to make immutable variables

+ Using String Templates like this:
console.log("Hello", firstName);
This will add spaces between words so: "Hello tom" is what will be output
+ Using String Templates with `` is MUCH better because it'll actually grab new lines as well:
    console.log(`Hi ${firstName}! Thanks!
        Total: $${price}
        Shipping: $${shipping}
        Grand Total: $${price + shipping}`)
NOTE: It'll grab those tabs as well, so be aware


+ A Symbol() is used to add to a Map without any naming conflicts
const id = Symbol();
const courseInfo = {
    title: "JavaScript",
    id: "js-course"
};
courseInfo[id] = 4123;
console.log(courseInfo); // No issues, id still exists
console.log(courseInfo[id]); // Will actually show 4123 correctly


+ Difference between Map and Object
Map: key value pairs, cannot use "." like an object, have to use ".get" and ".set"
Object: more generic that allows for "." to work
Map
let course = new Map();
course.set("react", { description: "ui" });
console.log(course.react.description); // BAD, you cannot do this
console.log(course.get("react").description); // GOOD, this is how to treat a map
+ QUIRKS: JS will iterate through a map based on insertion order, important to note
+ In a way, think of JS Map() as a ordered dictionary/hashmap
+ Here's how to init a Map if ever needed (The interesting thing is that it uses array annotation, kinda):
let details = new Map([
    // Interesting thing to note, you can add as much as you like after the first 2 elements,
    // but JS will completely IGNORE them
    [new Date(), "today", "hello", 3749834753908734087],
    [2, { javascript: ["js", "node", "react"] }],
    ["items", [1, 2]]
]);